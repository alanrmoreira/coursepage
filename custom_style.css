body {
  padding: 5rem;
  font-family: "Saira", sans-serif;
}

h1 {
  font-family: "Saira", sans-serif;
}

.olcards,
.olcards * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.olcards {
  counter-reset: cardCount;
  display: flex;
  flex-direction: column;
  gap: 0rem;
  padding-bottom: 1rem;
  width: 100%;
  margin: 0 auto;
}

.card {
  counter-increment: cardCount;
  display: flex;
  width: 100%;
  max-width: 100%;
  color: white;
  position: relative;
  --labelOffset: 1rem;
  --arrowClipSize: 1.5rem;
  justify-content: flex-start;
  flex-direction: row;
}

.card.invert {
  justify-content: flex-end;
  flex-direction: row-reverse;
}

/* Breakpoints */

@media (max-width: 700px) {
  body {
    padding: 1rem;
  }
  .card,
  .card.invert {
    width: 100%;
    max-width: 100%;
    margin-left: 0;
    margin-right: 0;
    margin-top: var(--labelOffset);
  }
  .olcards {
    gap: 1rem;
  }
}

@media (min-width: 701px) and (max-width: 1000px) {
  body {
    padding: 2rem;
    font-family: "Saira", sans-serif;
  }

  .card {
    width: 100%;
    max-width: 80%;
    margin-right: auto;
    margin-left: 0;
    margin-top: var(--labelOffset);
  }

  .olcards {
    gap: 1rem;
  }

  .card.invert {
    width: 100%;
    max-width: 80%;
    margin-left: auto;
    margin-right: 0;
  }
}

@media (min-width: 1001px) {
  .card {
    width: 100%;
    max-width: 50%;
    margin-right: auto;
    margin-left: 0;
  }

  .card.invert {
    width: 100%;
    max-width: 50%;
    margin-left: auto;
    margin-right: 0;
  }
}

.card::before {
  content: counter(cardCount, decimal-leading-zero);
  background: white;
  color: var(--cardColor, #333);
  font-size: 2em;
  font-weight: 700;
  transform: translateY(calc(-1 * var(--labelOffset)));
  margin-right: calc(-1 * var(--labelOffset));
  z-index: 1;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  padding-inline: 0.5em;
}

.card.invert::before {
  margin-left: calc(-1 * var(--labelOffset));
  margin-right: 0;
  justify-content: flex-end;
}

.card .content {
  background-color: var(--cardColor, #556b8b);
  --inlinePadding: 1em;
  --boxPadding: 0.5em;
  display: grid;
  padding: var(--boxPadding) calc(var(--inlinePadding) + var(--arrowClipSize))
    var(--boxPadding) calc(var(--inlinePadding) + var(--labelOffset));
  grid-template-areas:
    "icon title"
    "icon text";
  grid-template-columns: auto 1fr;
  gap: 0.25em 1em;
  clip-path: polygon(
    0 0,
    calc(100% - var(--arrowClipSize)) 0,
    100% 50%,
    calc(100% - var(--arrowClipSize)) 100%,
    calc(100% - var(--arrowClipSize)) calc(100% + 1rem),
    0 calc(100% + 1rem)
  );
  width: 100%;
  text-align: left;
  align-items: start;
  justify-items: start;
  position: relative;
}

.card:not(.invert) .content::before {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  background: var(--cardColor, #556b8b);
  left: 0;
  bottom: 0;
  clip-path: polygon(0 0, 100% 0, 0 100%);
  filter: brightness(0.75);
}

.card.invert .content {
  background-color: var(--cardColor, #556b8b);
  padding: var(--boxPadding) calc(var(--inlinePadding) + var(--labelOffset))
    var(--boxPadding) calc(var(--inlinePadding) + var(--arrowClipSize));
  grid-template-areas:
    "title icon"
    "text icon";
  grid-template-columns: 1fr auto;
  clip-path: polygon(
    var(--arrowClipSize) 0,
    100% 0,
    100% calc(100% + 1rem),
    var(--arrowClipSize) calc(100% + 1rem),
    0 50%,
    var(--arrowClipSize) 0
  );
  text-align: right;
  justify-items: end;
}

.card.invert .content::before {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  background: var(--cardColor, #556b8b);
  right: 0;
  bottom: 0;
  clip-path: polygon(100% 0, 0 0, 100% 100%);
  filter: brightness(0.75);
}

.card .content::after,
.card.invert .content::after {
  content: "";
  position: absolute;
  height: 1rem;
  width: 1rem;
  top: 100%;
}

.card .content::after {
  background: linear-gradient(to right, rgba(0, 0, 0, 0.25), transparent 50%);
  left: 0;
}

.card.invert .content::after {
  background: linear-gradient(to left, rgba(0, 0, 0, 0.25), transparent 50%);
  right: 0;
}

.card .icon {
  grid-area: icon;
  font-size: 1em;
  align-self: start;
  justify-self: start;
}

.card .title {
  grid-area: title;
  font-size: 1em;
  font-weight: bold;
  text-align: left;
  align-self: start;
  justify-self: start;
}

.card .text {
  grid-area: text;
  font-size: 0.8em;
  text-align: left;
  align-self: start;
  justify-self: start;
}

.card.invert .title,
.card.invert .text,
.card.invert .icon {
  text-align: right;
  justify-self: end;
}

.course-presentation {
  width: 100%;
}

.main_title {
  width: 100%;
  text-align: center;
}

.outline {
  border: solid 1px #003067;
  border-top-left-radius: 1.3rem;
  border-top-right-radius: 1.3rem;
}
.subtitle {
  width: 100%;
  text-align: center;
  background-color: #003067;
  height: 2rem;
  padding: 1rem;
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
  color: #ffffff;
  margin: 0;
  margin-bottom: 2rem;
}

.content_section {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  justify-content: space-evenly;
  border-top-left-radius: 1.3rem;
  border-top-right-radius: 1.3rem;
  padding: 0;
  margin-bottom: 2rem;
  z-index: 0;
  background: transparent;
  overflow: hidden;
}

.content_section_summary {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  justify-content: space-evenly;
  /* padding: 1rem; */
  /* margin-bottom: 2rem; */
  z-index: 0;
  background: transparent;
  text-align: center;
  overflow: hidden;
}

.content_section::before {
  content: "";
  position: absolute;
  inset: 0;
  background-image: url("./img/pexels-minan1398-683402.jpg");
  background-size: cover;
  background-position: center;
  filter: grayscale(4);
  z-index: -1;
  opacity: 0.1;
}

.inner_content {
  width: 100%;
}

.separator_image {
  width: 100%;
  overflow: hidden;
}

.separator_image img {
  display: block;
  width: 100%;
  height: auto;
  max-height: 15rem;
  object-fit: cover;
  margin: 2rem 0 2rem 0;
}

.summary {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  justify-content: center;
  padding: 1rem;
  margin-bottom: 3rem;
}

.summary_item {
  /* background-color: #f28c28; */
  /* background-color: #4caf50; */
  /* background-color: #fc374e; */
  background-color: #162d59;
  /* background-color: #091833; */
  color: #fff;
  padding: 0.5rem 1rem;
  white-space: normal;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  border-radius: 2px;
  font-weight: 600;
  /* clip-path: polygon(0 0, 98% 0, 100% 100%, 0% 100%); */
}

/* accordion */

.accordion {
  height: 100%;
  width: 90%;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  margin: 0 auto;
}

.accordion-item {
  width: 100%;
  background-color: white;
  border: 1px solid #ccc;
  border-radius: 6px;
  margin-bottom: 1rem;
  overflow: hidden;
}

.accordion input[type="checkbox"] {
  display: none;
}

.accordion-label {
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
  padding: 1rem;
  font-weight: bold;
  background-color: #004080;
  color: white;
  transition: background 0.2s ease;
}

.accordion-label:hover {
  background-color: #4caf50;
}
.accordion input[type="checkbox"]:checked + .accordion-label {
  background-color: #4caf50;
}
.accordion-label::after {
  content: "+";
  font-size: 1.5rem;
  transition: transform 0.3s ease;
}

.accordion input[type="checkbox"]:checked + .accordion-label::after {
  content: "â€“";
}

.accordion-content {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.4s ease, padding 0.4s ease;
  padding: 0 1rem;
  background-color: #f9f9f9;
}

.accordion input[type="checkbox"]:checked ~ .accordion-content {
  max-height: 300px;
  padding: 1rem;
}
.accordion-content > div {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.25rem 0;
}

.accordion-content svg {
  fill: #36aeb3;
}

.accordion-content > div:hover{
    text-decoration: underline;
    cursor: pointer;
} 

#content_accordion{
  margin-top: 4rem;
}